spring.application.name=ORDERSERVIES
spring.datasource.url=jdbc:mysql://localhost:3306/Orderproduct
spring.datasource.username=root
spring.datasource.password=8970144939
#spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.show-sql=true
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2014Dialect
spring.jpa.hibernate.ddl-auto =update

server.port=8086
# Enable Sleuth tracing
spring.sleuth.enabled=true

#zikip
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0
management.tracing.sampling.probability=1.0
logging.pattern.correlation=[${spring.application.name:},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-}]

eureka.instance.hostname=localhost
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8766/eureka/



management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

#Resilnce4j Properties
#resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10
#resilience4j.circuitbreaker.instances.inventory.minimumNumberOfCalls=5
#resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=10000
#resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3

 #Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.inventory.registerHealthindicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size-3
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=3
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED

# Retry Configuration
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s
#resilience4j.retry.instances.inventory.retry-exceptions[0]=org.springframework.web.client.HttpServerErrorException
#resilience4j.retry.instances.inventory.retry-exceptions[1]=java.io.IOException

# Rate Limiter Configuration
resilience4j.ratelimiter.instances.backendA.limit-for-period=10
resilience4j.ratelimiter.instances.backendA.limit-refresh-period=1s
resilience4j.ratelimiter.instances.backendA.timeout-duration=100ms

# Time Limiter Configuration
#resilience4j.timelimiter.instances.inventory.timeout-duration=2s

# Bulkhead Configuration
#resilience4j.bulkhead.instances.backendA.max-concurrent-calls=10
#resilience4j.bulkhead.instances.backendA.max-wait-duration=10ms


#kafka

spring.kafka.producer.bootstrap-servers:localhost:29092
spring.kafka.template.default.topic=notificationTopic
spring.kafka.template.producer.key-serializing=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.gruop-id=notificationTopic

#com.OrderServies.OrderServies.Event;
#spring.kafka.producer.properties.spring.json.type.mapping=kafka:com.booking.kafka.BookingconformEvenstream

#spring.kafka.producer.bootstrap-servers:localhost:9092
#spring.kafka.producer.key-serializer:org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer:org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.topic.name=booking
#spring.kafka.template.default-topic=booking
#spring.kafka.producer.properties.spring.json.type.mapping=kafka:com.booking.kafka.BookingconformEvenstream




